---
title: Pruvo Api Documentation

toc_footers:
  - <a href='https://www.pruvo.net/business'>Sign Up for a Developer Key</a>

search: true
---

# Overview

## Abstract

This documentation defines the specifications of an API who’s responsibility is to provide access to Pruvo’s unique price monitoring capabilities.

The API is designed as stateless and RESTful and responds only with JSON format. For security considerations, we require the use of SSL(HTTPS) only.

Current API version: 1.0

## Request data

- Every string passed to/from API has to be UTF-8 encoded
- Support for SNI SSL is required

<aside class="notice">
Every partner is subjected to a QPM(Queries Per Minute) limitation. Current QPM limit is 50.
</aside>

## Versioning

We may update the API without increasing the version number (i.e 2.1 2.2 etc…) for NON-BREAKING changes.

# Common

This section describes commonly accepted parameters, formats and structures which are used later in individual endpoints overviews.

## Meal Plans

The `mealPlan` valid enum values are:

 Value | Description
---------- | ------- 
0 | no meal plan
1 | breakfast
2 | half board
3 | all inclusive
4 | full board

# Authorization

This section describes the authorization process.

Every request to any available endpoint requires authorization. To get the authorization credentials you need an active partner account registered within Pruvo’s systems.

The following table details the required headers that must be sent with each request.

Header key | Header value | Description | Example
---------- | ------- | ------- | ------- 
`Authorization` | Authorization Key | Key provided by Pruvo | `bf93c4e2-36d6-413c-aa86-46c1b108215d`
`API-Version` | Api Version | PI Version to use | `1.0` 

If you prefer not to send the authorization data as headers, you can send them as query paramters:

Key | Value | Description | Example
---------- | ------- | ------- | ------- 
`access_token` | Authorization Key | Key provided by Pruvo | `bf93c4e2-36d6-413c-aa86-46c1b108215d`
`api-version` | Api Version | PI Version to use | `1.0` 

# End-points overview

This section describes push and pixel end-points which are currently supported by our API.

**Production Endpoint**  
<a href='https://www.pruvo.net/api/PushBookings'>www.pruvo.net/api/PushBookings/</a>

## Push End-point

> Request

```shell
curl -d '{"uniqueId":"jsdf354-sdf5-lasdfasdUi","email":"a@a.com","custom":"aaa__sdfsdf_45","price":45.6,"tax":12.6,"currencyCode":"EUR","roomType":"Double standard","rooms":1,"persons":2,"children":1,"arrivalDate":"05/25/2020","departureDate":"05/27/2020","lastFreeCancelTime":"05/21/2020","hotelName":"Main Hotel Budapest","mealPlan":1,"address":"24 Main street","city":"Paris","country":"France","latLong":"32.78778,-79.93472","thumbnail":"http://cdn.my.site/myHotel.png","manageLink":"http://myBookingSite.com/reservation?id=1","hotelLink":"http://myBookingSite.com/myHotel.html","hotelCode":"a123456","tripId":"b654321"}'\
 -H "Content-Type: application/json" -H "Authorization: bf93c4e2-36d6-413c-aa86-46c1b108215d" -H "API-Version	: 1.0" \
 -X POST https://www.pruvo.net/api/PushBookings/yourEndpoint
```

> Request body

```json-doc
{
  "uniqueId": "jsdf354-sdf5-lasdfasdUi",
  "email": "a@a.com",
  "custom": "aaa__sdfsdf_45",
  "price": 45.6,
  "tax": 12.6,
  "currencyCode": "EUR",
  "roomType": "Double standard",
  "rooms": 1,
  "persons": 2,
  "children": 1,
  "arrivalDate": "05/25/2020",
  "departureDate": "05/27/2020",
  "lastFreeCancelTime": "05/21/2020",
  "hotelName": "Main Hotel Budapest",
  "mealPlan": 1,
  "address": "24 Main street",
  "city": "Paris",
  "country": "France",
  "latLong": "32.78778,-79.93472",
  "thumbnail": "http://cdn.my.site/myHotel.png",
  "manageLink": "http://myBookingSite.com/reservation?id=1",
  "hotelLink": "http://myBookingSite.com/myHotel.html",
  "hotelCode": "a123456",
  "tripId": "b654321"
}
```

Push end-point provides you with the ability to submit a booking for price monitoring.

 | | 
---------- | -------  | ------- 
**URL** | /yourEndpoint
**SCHEMA** | HTTPS
**METHOD** | POST


**Accepted parameters**

<%= partial "includes/params.md.erb" %>

## Pixel End-point

> Request

```shell
curl "https://www.pruvo.net/api/PushBookings/yourEndpoint?access_token=bf93c4e2-36d6-413c-aa86-46c1b108215d&api-version=1.0&uniqueId=jsdf354-sdf5-lasdfasdUi&email=a%40a.com&custom=aaa__sdfsdf_45&price=45.6&tax=12.6&currencyCode=EUR&roomType=Double%20standard&rooms=1&persons=2&children=1&arrivalDate=05%2F25%2F2020&departureDate=05%2F27%2F2020&lastFreeCancelTime=05%2F21%2F2020&hotelName=Main%20Hotel%20Budapest&mealPlan=1&address=24%20Main%20street&city=Paris&country=France&latLong=32.78778%2C-79.93472&thumbnail=http%3A%2F%2Fcdn.my.site%2FmyHotel.png&manageLink=http%3A%2F%2FmyBookingSite.com%2Freservation%3Fid%3D1&hotelLink=http%3A%2F%2FmyBookingSite.com%2FmyHotel.html&hotelCode=a123456&tripId=b654321"
```

> Request query params

```json-doc
{
  "access_token": "bf93c4e2-36d6-413c-aa86-46c1b108215d", // Notice we passed the authorization headers in the query paramters
  "api-version": "1.0",
  "uniqueId": "jsdf354-sdf5-lasdfasdUi",
  "email": "a@a.com",
  "custom": "aaa__sdfsdf_45",
  "price": 45.6,
  "tax": 12.6,
  "currencyCode": "EUR",
  "roomType": "Double standard",
  "rooms": 1,
  "persons": 2,
  "children": 1,
  "arrivalDate": "05/25/2020",
  "departureDate": "05/27/2020",
  "lastFreeCancelTime": "05/21/2020",
  "hotelName": "Main Hotel Budapest",
  "mealPlan": 1,
  "address": "24 Main street",
  "city": "Paris",
  "country": "France",
  "latLong": "32.78778,-79.93472",
  "thumbnail": "http://cdn.my.site/myHotel.png",
  "manageLink": "http://myBookingSite.com/reservation?id=1",
  "hotelLink": "http://myBookingSite.com/myHotel.html",
  "hotelCode": "a123456",
  "tripId": "b654321"
}
```

Pixel end-point provides you with the ability to submit a booking for price monitoring using GET method.

 | | 
---------- | -------  | ------- 
**URL** | /yourEndpoint
**SCHEMA** | HTTPS
**METHOD** | GET


**Accepted parameters**

<%= partial "includes/params.md.erb" %>

# Errors Handling

## Error Response Structure

All 400 errors encountered during request will render the same error structure.

> 400 Error Response Structure

```json-doc

{
    "error": {
        "name": "Error",
        "status": 400,
        "message": "Request data validation error",
        "errors": [
            {
                "failed": "required", // The condition that failed
                "path": [
                    "hotelName" // parameter that caused an error
                ]
            }
        ]
    }
}

```

The API uses the following error codes:

Error Code | Meaning
---------- | -------
400 | Bad Request -- 	The request cannot be fulfilled due to bad syntax.
401 | Unauthorized -- The end-point requested is not allowed.
403 | Forbidden -- The end-point requested is not allowed.
404 | Not Found -- The end-point requested could not be found.
405 | Method Not Allowed -- You tried to access an end-point with an invalid method.
406 | Not Acceptable -- You requested a format that isn't json.
410 | Gone -- The request end-point requested has been removed from our servers.
429 | Too Many Requests -- You're making too many requests! Slow down!
500 | Internal Server Error -- We had a problem with our server. Try again later.
503 | Service Unavailable -- We're temporarily offline for maintenance. Please try again later.

# Support

- Send all support questions and issues to dev@pruvo.net
- In your support inquiry, please be sure to include the request, response, and timestamp (UTC)
